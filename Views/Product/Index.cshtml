
@{
    ViewData["Title"] = "庫存表";
}

<div class="container">    
    <div class="row">
        <div class="col-12 mt-4">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">商品編號</th>
                        <th scope="col">商品名稱</th>
                        <th scope="col">種類</th>
                        <th scope="col">商品說明</th>
                        <th scope="col">價格</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="item in Products">                       
                            <td scope="row">{{item.ProductID}}</td>
                            <td scope="row"><input v-model="item.ProductID" /></td>
                            <td scope="row"><input v-model="item.ProductName" /></td>
                            <td scope="row"><input v-model="item.CategoryID" /></td>
                            <td scope="row"><input v-model="item.Description" /></td>
                            <td scope="row"><input v-model="item.UnitPrice" /></td>  
                            <td scope="row">{{item.ProductID}}</td>
                            <td scope="row">{{item.ProductName}}</td>
                            <td scope="row">{{item.CategoryID}}</td>
                            <td scope="row">{{item.Description}}</td>
                            <td scope="row">{{item.UnitPrice}}</td>  
                            <td>
                                 <button type="button" class="btn btn-danger" @@click="deleteProducts(item.productId)">輸入</button>
                            </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

@section scripts
{
    <script>
    var appVue = new Vue({
        el: "#appVue",
        name: "appVue",
        data: {           
            Products: []
        },        
        methods: {
            getProducts: function () {
                let _this = this;
                axios.get(window.location.origin + "/Products/List").then(response => {
                    _this.Products = response.data;
                    var ProductsList = [];
                    for (var x = 0; x <= _this.Products.length - 1; x++) {
                        var item = {};
                        item = _this.Products[x];
                        ProductsList.push(item);
                    }
                    _this.Products = ProductsList;
                });

            },
            
            bomProducts: function (productId) {
                let _this = this;
                axios.delete(window.location.origin + "/Products/bom" + productId).then(response => {
                    _this.getProducts();
                });
            },
            
        }
    });
    </script>
}